use CursoSQL
go
---Crear un procedimiento almacenado usando ciclos y condicionantes
CREATE PROCEDURE NUMEROS
AS
declare @valor int = 0;
while (@valor <=10)
begin
if (@valor % 2=0)
	begin
	print cast(@valor as varchar(10)) + ' el numero es par'
	end
else
	begin
	print cast(@valor as varchar(10)) + ' el numero es impar'
	end 
	set @valor= @valor + 1
end
GO
---Ejecutar el procedimiento anterior
EXEC NUMEROS
GO
---CREAR PROCEDIMIENTO
CREATE PROCEDURE INSERT_SUPPLIER (
@CompanyName VARCHAR(159), @ContactName VARCHAR(159), @ContactTitle VARCHAR(159)
, @Country VARCHAR(159))
AS
INSERT INTO SUPPLIERS (CompanyName, ContactName, ContactTitle, Country)
VALUES
(@CompanyName, @ContactName, @ContactTitle, @Country)
GO
---MODIFICAR PROCEDIMIENTO
ALER PROCEDURE INSERT_SUPPLIER (
@CompanyName VARCHAR(159), @ContactName VARCHAR(159), @ContactTitle VARCHAR(159)
, @Country VARCHAR(159), @Address VARCHAR(150))
AS
INSERT INTO SUPPLIERS (CompanyName, ContactName, ContactTitle, Country, Address)
VALUES
(@CompanyName, @ContactName, @ContactTitle, @Country, @Address)
GO
--EJECTUAR EL PROCEDIMIENTO
EXECUTE INSERT_SUPPLIER 'VISOAL','VICTOR CARDENAS','ING','GUATEMALA', 'CIUDAD CAPITAL'
GO
--CONSULTAR LA TABLA
SELECT * FROM SUPPLIERS WHERE CompanyName='VISOAL'

---CONSULTAR TABLAS DEL SISTEMA PARA DEVOLVER LOS PROCEDIMIENTOS EXISTENTES
SELECT * FROM SYS.procedures
--CONSULTAR EL SCRIPT QUE ORIGINA EL PROCEDIMIENTO
SP_HELPTEXT INSERT_SUPPLIER
GO
--USAR OTRA VEZ EL PROCEDIMIENTO ANTERIOR CON LA SENTENCIA WITH RECOMPILE
EXECUTE INSERT_SUPPLIER 'EMPRESA NACIONAL','JUAN PEREZ','ING','GUATEMALA', 'CIUDAD CAPITAL'
WITH RECOMPILE
GO
---PROCEDIMIENTO CON PARAMETROS DE SALIDA
CREATE PROCEDURE ELIMINACION_PAIS (@PAIS VARCHAR(150), @FILAS INT OUTPUT)
AS
DELETE FROM Suppliers WHERE Country=@PAIS
SET @FILAS=@@ROWCOUNT
GO
--USAR EL PROCEDIMIENTO ANTERIOR
DECLARE @DATOS INT
EXEC ELIMINACION_PAIS 'GUATEMALA', @DATOS OUTPUT
SELECT @DATOS
GO
---ELIMINAR UN PROCEDIMIENTO
DROP PROCEDURE INSERT_SUPPLIER
GO
--PROCEDIMIENTO QUE DEVUELVE DATOS, ENCRIPTADO Y QUE SIEMPRE GENERA UN PLAN DE EJECUCION 
CREATE PROCEDURE PROC_VENTAS
WITH ENCRYPTION, RECOMPILE
AS
SELECT C.CUSTOMERID, C.COMPANYNAME, C.COUNTRY, O.ORDERID, O.ORDERDATE
, P.PRODUCTNAME, D.UNITPRICE, D.QUANTITY FROM CUSTOMERS AS C
INNER JOIN ORDERS AS O ON C.CustomerID=O.CUSTOMERID
INNER JOIN [ORDER DETAILS] AS D ON O.ORDERID=D.ORDERID
INNER JOIN PRODUCTS AS P ON P.PRODUCTID=D.PRODUCTID 
GO
--EJECUTAR EL PROCEDIMIENTO ANTERIOR
EXECUTE PROC_VENTAS
GO
--MODIFICAR EL PROCEDIMIENTO ANTERIOR QUITANDO EL RECOMPILE 
ALTER PROCEDURE PROC_VENTAS
WITH ENCRYPTION
AS
SELECT C.CUSTOMERID, C.COMPANYNAME, C.COUNTRY, O.ORDERID, O.ORDERDATE
, P.PRODUCTNAME, D.UNITPRICE, D.QUANTITY FROM CUSTOMERS AS C
INNER JOIN ORDERS AS O ON C.CustomerID=O.CUSTOMERID
INNER JOIN [ORDER DETAILS] AS D ON O.ORDERID=D.ORDERID
INNER JOIN PRODUCTS AS P ON P.PRODUCTID=D.PRODUCTID 
GO
--EJECUTAR EL PROCEDIMIENTO ANTERIOR AGREGANDO EL RECOMPILE AL EJECUTAR
EXECUTE PROC_VENTAS
WITH RECOMPILE
GO
